generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cart {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  status   Boolean  @default(false)
  item     item[]
  payment  payment?
  user     user?    @relation(fields: [userId], references: [id])
  userId   Int      @unique
}

model category {
  id       Int        @id @default(autoincrement())
  name     String     @unique @db.VarChar(50)
  desc     String?    @db.VarChar(255)
  createAt DateTime   @default(now())
  updateAt DateTime   @updatedAt
  product  products[]
}

model image {
  id       Int        @id @default(autoincrement())
  publicId String     @unique
  url      String     @unique @db.VarChar(255)
  name     String
  size     Int
  format   String     @db.Char(4)
  createAt DateTime   @default(now())
  product  products[]
}

model item {
  id       Int        @id @default(autoincrement())
  quantity Int        @default(1)
  price    Int
  createAt DateTime   @default(now())
  updateAt DateTime   @updatedAt
  product  products[]
  cart     cart?      @relation(fields: [cartId], references: [id])
  cartId   Int?
}

model payment {
  id       Int      @id @default(autoincrement())
  name     String
  email    String
  adress   String   @db.VarChar(255)
  total    Int
  createAt DateTime @default(now())
  status   Boolean  @default(false)
  updateAt DateTime @updatedAt
  cart     cart?    @relation(fields: [cartId], references: [id])
  cartId   Int      @unique
}

model products {
  id         Int       @id @default(autoincrement())
  name       String    @unique @db.VarChar(100)
  desc       String?   @db.VarChar(255)
  price      Int       @default(0)
  checked    Boolean   @default(false)
  sold       Int       @default(0)
  createAt   DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  category   category? @relation(fields: [categoryId], references: [id])
  categoryId Int?
  image      image?    @relation(fields: [imageId], references: [id])
  imageId    Int?
  item       item?     @relation(fields: [itemId], references: [id])
  itemId     Int?
}

model user {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(25)
  email    String    @unique @db.VarChar(50)
  password String
  createAt DateTime  @default(now())
  role     user_role @default(USER)

  cart cart?
}

enum user_role {
  ADMIN
  USER
}
